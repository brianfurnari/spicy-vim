# Read File Into Vector
snippet readfile
	std::vector<char> v;
	if (FILE *${2:fp} = fopen(${1:"filename"}, "r")) {
		char buf[1024];
		while (size_t len = fread(buf, 1, sizeof(buf), $2))
			v.insert(v.end(), buf, buf + len);
		fclose($2);
	}${3}
# std::map
snippet map
	std::map<${1:key}, ${2:value}> map${3};
# std::vector
snippet vector
	std::vector<${1:char}> v${2};
# Namespace
snippet ns
	namespace ${1:`Filename('', 'my')`} {
		${2}
	} /* $1 */
# Class
snippet cl
	class ${1:`Filename('$1', 'name')`} {
	public:

		$1(void);
		virtual
			~$1(void);

		//////////////////////////////////////////////////
		// Private Methods
		//////////////////////////////////////////////////
		${2:/* Methods */}

		//////////////////////////////////////////////////
		// Private Fields
		//////////////////////////////////////////////////
		${3:/* Fields */}

	};
snippet fori
	for (int ${2:i} = 0; $2 < ${1:count}; $2${3:++}) {
		${4:/* code */}
	}
# Method
snippet m
	//--------------------------------------------------
	${1:HRESULT}
	${2:C`Filename('$1', 'name')`}::${3:myMethod}(
		${4:params}) {

		$1 ${5:hr} = ${6:S_OK};

		return $5;
	}
# Method Prototype
snippet mp
	/**
	 * ${4:Description}
	 * $3
	 * @returns $1
	 */
	${1:HRESULT}
		${2:myMethod}(
				${3:params});
#Code block
snippet cb
	if (${1}SUCCEEDED(${2:hr})) {

		${3}

		if ($1FAILED($2)){
		}
	}
snippet hr
	HRESULT hr = S_OK;
snippet hrs
	if (SUCCEEDED(${1:hr}))
		${2:/* code */}
snippet hrf
	if (FAILED(${1:hr}))
		${2:/* code */}
snippet fh CPP Style File Header
	/*#################################################################
	#   ____ _                 ____            _                      #
	#  / ___(_)___  ___ ___   / ___| _   _ ___| |_ ___ _ __ ___  ___  #
	# | |   | / __|/ __/ _ \  \___ \| | | / __| __/ _ \ '_ ` _ \/ __| #
	# | |___| \__ \ (_| (_) |  ___) | |_| \__ \ ||  __/ | | | | \__ \ #
	#  \____|_|___/\___\___/  |____/ \__, |___/\__\___|_| |_| |_|___/ #
	#                                |___/                            #
	#                                                                 #
	###################################################################
	# Copyright 2014 Cisco Systems (USA)                              #
	# All rights, including trade secret rights, reserved.            #
	#################################################################*/
snippet hfh CPP Style File Header
	/*#################################################################
	#   ____ _                 ____            _                      #
	#  / ___(_)___  ___ ___   / ___| _   _ ___| |_ ___ _ __ ___  ___  #
	# | |   | / __|/ __/ _ \  \___ \| | | / __| __/ _ \ '_ ` _ \/ __| #
	# | |___| \__ \ (_| (_) |  ___) | |_| \__ \ ||  __/ | | | | \__ \ #
	#  \____|_|___/\___\___/  |____/ \__, |___/\__\___|_| |_| |_|___/ #
	#                                |___/                            #
	#                                                                 #
	###################################################################
	# Copyright 2012 Cisco Systems (USA)                              #
	# All rights, including trade secret rights, reserved.            #
	#################################################################*/
	#pragma once
	
	${1}
# File Classes
snippet fcl
	//////////////////////////////////////////////////////////////////////
	/// @name Classes
	//@{
	
	${1}
	
	//@} End of Classes
##################################################
# Google Test snippets
##################################################
snippet gfh
	/*#################################################################
	#   ____ _                 ____            _                      #
	#  / ___(_)___  ___ ___   / ___| _   _ ___| |_ ___ _ __ ___  ___  #
	# | |   | / __|/ __/ _ \  \___ \| | | / __| __/ _ \ '_ ` _ \/ __| #
	# | |___| \__ \ (_| (_) |  ___) | |_| \__ \ ||  __/ | | | | \__ \ #
	#  \____|_|___/\___\___/  |____/ \__, |___/\__\___|_| |_| |_|___/ #
	#                                |___/                            #
	#                                                                 #
	###################################################################
	# Copyright 2014 Cisco Systems (USA)                              #
	# All rights, including trade secret rights, reserved.            #
	#################################################################*/
	#pragma once

	#include <gmock/gmock.h>

snippet gt
	TEST_F(${1:`Filename('', 'my')`}, ${2:my_kickass_unit_test_will_succeed}) { }
	${3}
snippet gcl
	class ${1:`Filename('', 'my')`}: public ::testing::Test {

	public:

	  /**
	   * Constructor
	   */
	  $1(void) {}

	  /**
	   * Destructor
	   */
	  ~$1(void) {}

	  /**
	   * Test Case Setup
	   */
	  virtual void
	    SetUp(void);

	  /**
	   * Test Case Teardown
	   */
	  virtual void
	    TearDown(void);

		${3}

	};
snippet gat
	ASSERT_TRUE(${1:TRUE});
	${2}
snippet gaf
	ASSERT_FALSE(${1:FALSE});
	${2}
snippet gae
	ASSERT_EQ(${1:Expected}, ${2:Result});
	${3}
snippet gee
	EXPECT_EQ(${1:Expected}, ${2:Result});
	${3}
snippet gf
	FAIL();
	${1}
snippet gmec
	EXPECT_CALL(${1:instance}, ${2:Method(${3:matchers})})
		.WillRepeatedly(${4:Return(0)});
